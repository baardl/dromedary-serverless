{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description":"apigateway for the application",
  "Parameters":{
    "BucketName":{
      "Type":"String",
      "Description":"The name of the bucket to install lambdas from"
    },
    "TestAppLambdaName":{
      "Type":"String",
      "Description":"The name of the test lambda to integrate the gateway with"
    },
    "ProdAppLambdaName":{
      "Type":"String",
      "Description":"The name of the prod lambda to integrate the gateway with"
    },
    "TestDDBTableName":{
      "Type":"String",
      "Description":"The DynamoDB table name for test stage"
    },
    "ProdDDBTableName":{
      "Type":"String",
      "Description":"The DynamoDB table name for prod stage"
    },
    "ApiIntegrationCredentialsRole": {
      "Type":"String",
      "Description":"Role used by api gateway for calling app lambda function"
    }
  },
  "Resources" : {
    "RestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "REST Api",
        "Name": {
          "Fn::Join": [
            "-",
            [
              "Api",
              {
                "Ref": "AWS::StackName"
              }
            ]
          ]
        }
      }
    },
    "RootResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "PathPart": "{subpath}",
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "RestApi"
        }
      }
    },
    "RootGetMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "RootResource"
        },
        "RestApiId": {
          "Ref": "RestApi"
        },
        "RequestModels": {},
        "RequestParameters": {
          "method.request.path.subpath": true
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseModels": {},
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Content-Type": true
            }
          }
        ],
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                "arn:aws:lambda:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":function:",
                "${stageVariables.AppFunctionName}:${stageVariables.AppVersion}/invocations"
              ]
            ]
          },
          "Credentials": {
            "Ref": "ApiIntegrationCredentialsRole"
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "\n",
                [
                  "{",
                  "  \"stage\": \"$context.stage\",",
                  "  \"request-id\": \"$context.requestId\",",
                  "  \"api-id\": \"$context.apiId\",",
                  "  \"resource-path\": \"$context.resourcePath\",",
                  "  \"resource-id\": \"$context.resourceId\",",
                  "  \"http-method\": \"$context.httpMethod\",",
                  "  \"source-ip\": \"$context.identity.sourceIp\",",
                  "  \"user-agent\": \"$context.identity.userAgent\",",
                  "  \"account-id\": \"$context.identity.accountId\",",
                  "  \"api-key\": \"$context.identity.apiKey\",",
                  "  \"caller\": \"$context.identity.caller\",",
                  "  \"user\": \"$context.identity.user\",",
                  "  \"user-arn\": \"$context.identity.userArn\",",
                  "  \"queryString\": \"$input.params().querystring\",",
                  "  \"headers\": \"$input.params().header\",",
                  "  \"pathParams\": \"$input.params().path\",",
                  "  \"allParams\": \"$input.params()\",",
                  "  \"ddbTableName\": \"$stageVariables.DDBTableName\"",
                  "}"
                ]
              ]
            }
          },
          "RequestParameters": {
            "integration.request.path.subpath": "method.request.path.subpath"
          },
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "SelectionPattern": ".*",
              "ResponseTemplates": {
                "application/json": "$util.base64Decode( $input.path('$.payload') )"
              },
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, OPTIONS'",
                "method.response.header.Content-Type": "integration.response.body.contentType"
              }
            }
          ]
        }
      }
    },
    "UsersResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "PathPart": "users",
        "ParentId": {
          "Fn::GetAtt": [
            "RestApi",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "RestApi"
        }
      }
    },
    "UserResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "PathPart": "{userid}",
        "ParentId": {
          "Ref": "UsersResource"
        },
        "RestApiId": {
          "Ref": "RestApi"
        }
      }
    },
    "UserGetMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "UserResource"
        },
        "RestApiId": {
          "Ref": "RestApi"
        },
        "RequestModels": {},
        "RequestParameters": {
          "method.request.path.userid": true
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseModels": {},
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Content-Type": true
            }
          }
        ],
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                "arn:aws:lambda:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":function:",
                "${stageVariables.AppFunctionName}:${stageVariables.AppVersion}/invocations"
              ]
            ]
          },
          "Credentials": {
            "Ref": "ApiIntegrationCredentialsRole"
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "\n",
                [
                  "{",
                  "  \"stage\": \"$context.stage\",",
                  "  \"request-id\": \"$context.requestId\",",
                  "  \"api-id\": \"$context.apiId\",",
                  "  \"resource-path\": \"$context.resourcePath\",",
                  "  \"resource-id\": \"$context.resourceId\",",
                  "  \"http-method\": \"$context.httpMethod\",",
                  "  \"source-ip\": \"$context.identity.sourceIp\",",
                  "  \"user-agent\": \"$context.identity.userAgent\",",
                  "  \"account-id\": \"$context.identity.accountId\",",
                  "  \"api-key\": \"$context.identity.apiKey\",",
                  "  \"caller\": \"$context.identity.caller\",",
                  "  \"user\": \"$context.identity.user\",",
                  "  \"user-arn\": \"$context.identity.userArn\",",
                  "  \"queryString\": \"$input.params().querystring\",",
                  "  \"headers\": \"$input.params().header\",",
                  "  \"pathParams\": \"$input.params().path\",",
                  "  \"allParams\": \"$input.params()\",",
                  "  \"ddbTableName\": \"$stageVariables.DDBTableName\"",
                  "}"
                ]
              ]
            }
          },
          "RequestParameters": {
            "integration.request.path.userid": "method.request.path.userid"
          },
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "SelectionPattern": ".*",
              "ResponseTemplates": {
                "application/json": "$util.base64Decode( $input.path('$.payload') )"
              },
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET, OPTIONS'",
                "method.response.header.Content-Type": "integration.response.body.contentType"
              }
            }
          ]
        }
      }
    },
    "ApiTestDeployment": {
      "DependsOn": [ "RootGetMethod" ],
      "Type" : "AWS::ApiGateway::Deployment",
      "Properties" : {
        "RestApiId": { "Ref": "RestApi" },
        "StageName": "test",
        "StageDescription" : {
          "StageName": "test",
          "Variables": {
            "DDBTableName": { "Ref": "TestDDBTableName" },
            "AppFunctionName": { "Ref":"TestAppLambdaName" },
            "AppVersion":"test"
          }
        }
      }
    },
    "ApiProdDeployment": {
      "DependsOn": [ "RootGetMethod" ],
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "RestApi"
        },
        "StageName": "prod",
        "StageDescription": {
          "StageName": "prod",
          "Variables": {
            "DDBTableName": {
              "Ref": "ProdDDBTableName"
            },
            "AppFunctionName": {
              "Ref": "ProdAppLambdaName"
            },
            "AppVersion": "prod"
          }
        }
      }
    }
  },
  "Outputs" : {
    "StackName":{
      "Value":{ "Ref":"AWS::StackName" }
    },
    "ApiName": {
      "Value": { "Ref": "RestApi"}
    },
    "TestApiUrl": {
      "Value": { "Fn::Join": [ "", [ "https://", { "Ref": "RestApi"}, ".execute-api.",{"Ref":"AWS::Region"},".amazonaws.com/test"] ] }
    },
    "ProdApiUrl": {
      "Value": { "Fn::Join": [ "", [ "https://", { "Ref": "RestApi"}, ".execute-api.",{"Ref":"AWS::Region"},".amazonaws.com/prod"] ] }
    }
  }
}